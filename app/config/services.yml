# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
services:
    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotations.reader ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]

    gedmo.listener.blameable:
        class: Gedmo\Blameable\BlameableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotations.reader ] ]
    hashids:
        class: Hashids\Hashids
        arguments: ["%hashids.secret%", "%hashids.minsize%"]



    form.listener:
        class: AppBundle\EventListner\FormListener
        arguments: [@session]

    form.type.base:
        abstract: true
        class: AppBundle\Form\BaseType
        tags:
            - { name: form.type, alias: base }
        arguments: [@form.listener]

    form.type.payment:
        class: AppBundle\Form\PaymentType
        tags:
            - { name: form.type, alias: payment }
        parent: form.type.base

    form.type.player:
        class: AppBundle\Form\PlayerType
        tags:
            - { name: form.type, alias: player }
        parent: form.type.base

    form.type.registration:
        class: AppBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: registration }
        parent: form.type.base

    form.type.token:
        class: AppBundle\Form\TokenType
        tags:
            - { name: form.type, alias: token }
        parent: form.type.base

    form.type.password.request:
        class: AppBundle\Form\PasswordRequestType
        tags:
            - { name: form.type, alias: passwordRequest }
        parent: form.type.base

    form.type.password.input:
        class: AppBundle\Form\Field\PasswordInputType
        tags:
            - { name: form.type, alias: passwordInput }

    form.type.teammate:
        class: AppBundle\Form\Field\TeammateType
        arguments: ["@doctrine.orm.entity_manager"]
        tags:
            - { name: form.type, alias: teammate }

    form.type.team:
        class: AppBundle\Form\TeamType
        tags:
            - { name: form.type, alias: team }
        parent: form.type.base


    repository.game:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - "AppBundle\Entity\SpotlightGame"

    twig.extension:
        class: AppBundle\Twig\TwigExtension
        tags:
            - { name: twig.extension }
        arguments: ["@repository.game"]

    repository.ticket:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - "AppBundle\Entity\Ticket"

    manager.place:
        class: AppBundle\Service\PlaceManager
        arguments: ["@repository.ticket", %maximumplayernumber%]

    manager.price:
        class: AppBundle\Service\PriceManager
        arguments: [%price.ticket.full%, %price.ticket.reduced%, %reducedPriceDomains%]

    manager.mail:
        class: AppBundle\Service\MailManager
        arguments: [ @mailer, "%mailer_expeditor%" ]